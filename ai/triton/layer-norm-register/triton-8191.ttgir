#blocked = #ttg.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("/home/wenqin/study/triton-code/triton-2.py":18:0)
#loc1 = loc(unknown)
#loc15 = loc("/home/wenqin/study/triton-code/triton-2.py":41:18)
#loc28 = loc("/home/wenqin/study/triton-code/triton-2.py":49:17)
#loc55 = loc(callsite(#loc1 at #loc15))
#loc57 = loc(callsite(#loc1 at #loc28))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 8 : i32, ttg.target = "cuda:86", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @_layer_norm_fwd_fused(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/wenqin/study/triton-code/triton-2.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/wenqin/study/triton-code/triton-2.py":18:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/wenqin/study/triton-code/triton-2.py":18:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/wenqin/study/triton-code/triton-2.py":18:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/wenqin/study/triton-code/triton-2.py":18:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/wenqin/study/triton-code/triton-2.py":18:0), %arg6: i32 loc("/home/wenqin/study/triton-code/triton-2.py":18:0), %arg7: i32 loc("/home/wenqin/study/triton-code/triton-2.py":18:0), %arg8: f32 loc("/home/wenqin/study/triton-code/triton-2.py":18:0)) attributes {noinline = false} {
    %c8192_i32 = arith.constant 8192 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 1.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<8192xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %arg6 : i32 loc(#loc3)
    %2 = tt.addptr %arg1, %1 : !tt.ptr<f32>, i32 loc(#loc4)
    %3 = tt.addptr %arg0, %1 : !tt.ptr<f32>, i32 loc(#loc5)
    %4 = tt.make_range {end = 8192 : i32, start = 0 : i32} : tensor<8192xi32, #blocked> loc(#loc6)
    %5 = tt.splat %arg7 : i32 -> tensor<8192xi32, #blocked> loc(#loc7)
    %6 = tt.splat %3 : !tt.ptr<f32> -> tensor<8192x!tt.ptr<f32>, #blocked> loc(#loc8)
    %7 = scf.for %arg9 = %c0_i32 to %arg7 step %c8192_i32 iter_args(%arg10 = %cst_0) -> (tensor<8192xf32, #blocked>)  : i32 {
      %26 = tt.splat %arg9 : i32 -> tensor<8192xi32, #blocked> loc(#loc10)
      %27 = arith.addi %26, %4 : tensor<8192xi32, #blocked> loc(#loc10)
      %28 = arith.cmpi slt, %27, %5 : tensor<8192xi32, #blocked> loc(#loc7)
      %29 = tt.addptr %6, %27 : tensor<8192x!tt.ptr<f32>, #blocked>, tensor<8192xi32, #blocked> loc(#loc8)
      %30 = tt.load %29, %28, %cst_0 : tensor<8192x!tt.ptr<f32>, #blocked> loc(#loc11)
      %31 = arith.addf %arg10, %30 : tensor<8192xf32, #blocked> loc(#loc12)
      scf.yield %31 : tensor<8192xf32, #blocked> loc(#loc13)
    } loc(#loc9)
    %8 = "tt.reduce"(%7) <{axis = 0 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc15)), %arg10: f32 loc(callsite(#loc1 at #loc15))):
      %26 = arith.addf %arg9, %arg10 : f32 loc(#loc58)
      tt.reduce.return %26 : f32 loc(#loc54)
    }) : (tensor<8192xf32, #blocked>) -> f32 loc(#loc54)
    %9 = arith.sitofp %arg7 : i32 to f32 loc(#loc17)
    %10 = arith.divf %8, %9 : f32 loc(#loc17)
    %11 = tt.splat %10 : f32 -> tensor<8192xf32, #blocked> loc(#loc18)
    %12 = scf.for %arg9 = %c0_i32 to %arg7 step %c8192_i32 iter_args(%arg10 = %cst_0) -> (tensor<8192xf32, #blocked>)  : i32 {
      %26 = tt.splat %arg9 : i32 -> tensor<8192xi32, #blocked> loc(#loc20)
      %27 = arith.addi %26, %4 : tensor<8192xi32, #blocked> loc(#loc20)
      %28 = arith.cmpi slt, %27, %5 : tensor<8192xi32, #blocked> loc(#loc21)
      %29 = tt.addptr %6, %27 : tensor<8192x!tt.ptr<f32>, #blocked>, tensor<8192xi32, #blocked> loc(#loc22)
      %30 = tt.load %29, %28, %cst_0 : tensor<8192x!tt.ptr<f32>, #blocked> loc(#loc23)
      %31 = arith.subf %30, %11 : tensor<8192xf32, #blocked> loc(#loc18)
      %32 = arith.select %28, %31, %cst_0 : tensor<8192xi1, #blocked>, tensor<8192xf32, #blocked> loc(#loc24)
      %33 = arith.mulf %32, %32 : tensor<8192xf32, #blocked> loc(#loc25)
      %34 = arith.addf %arg10, %33 : tensor<8192xf32, #blocked> loc(#loc26)
      scf.yield %34 : tensor<8192xf32, #blocked> loc(#loc27)
    } loc(#loc19)
    %13 = "tt.reduce"(%12) <{axis = 0 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc28)), %arg10: f32 loc(callsite(#loc1 at #loc28))):
      %26 = arith.addf %arg9, %arg10 : f32 loc(#loc59)
      tt.reduce.return %26 : f32 loc(#loc56)
    }) : (tensor<8192xf32, #blocked>) -> f32 loc(#loc56)
    %14 = arith.divf %13, %9 : f32 loc(#loc29)
    %15 = arith.addf %14, %arg8 : f32 loc(#loc30)
    %16 = math.sqrt %15 : f32 loc(#loc31)
    %17 = arith.divf %cst, %16 : f32 loc(#loc32)
    %18 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc33)
    tt.store %18, %17 : !tt.ptr<f32> loc(#loc34)
    %19 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc35)
    tt.store %19, %10 : !tt.ptr<f32> loc(#loc36)
    %20 = tt.make_range {end = 8192 : i32, start = 0 : i32} : tensor<8192xi32, #blocked1> loc(#loc37)
    %21 = tt.splat %arg7 : i32 -> tensor<8192xi32, #blocked1> loc(#loc38)
    %22 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<8192x!tt.ptr<f32>, #blocked> loc(#loc39)
    %23 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<8192x!tt.ptr<f32>, #blocked> loc(#loc40)
    %24 = tt.splat %17 : f32 -> tensor<8192xf32, #blocked> loc(#loc41)
    %25 = tt.splat %2 : !tt.ptr<f32> -> tensor<8192x!tt.ptr<f32>, #blocked1> loc(#loc42)
    scf.for %arg9 = %c0_i32 to %arg7 step %c8192_i32  : i32 {
      %26 = tt.splat %arg9 : i32 -> tensor<8192xi32, #blocked> loc(#loc44)
      %27 = tt.splat %arg9 : i32 -> tensor<8192xi32, #blocked1> loc(#loc44)
      %28 = arith.addi %26, %4 : tensor<8192xi32, #blocked> loc(#loc44)
      %29 = arith.addi %27, %20 : tensor<8192xi32, #blocked1> loc(#loc44)
      %30 = arith.cmpi slt, %28, %5 : tensor<8192xi32, #blocked> loc(#loc38)
      %31 = arith.cmpi slt, %29, %21 : tensor<8192xi32, #blocked1> loc(#loc38)
      %32 = tt.addptr %22, %28 : tensor<8192x!tt.ptr<f32>, #blocked>, tensor<8192xi32, #blocked> loc(#loc39)
      %33 = tt.load %32, %30 : tensor<8192x!tt.ptr<f32>, #blocked> loc(#loc45)
      %34 = tt.addptr %23, %28 : tensor<8192x!tt.ptr<f32>, #blocked>, tensor<8192xi32, #blocked> loc(#loc40)
      %35 = tt.load %34, %30 : tensor<8192x!tt.ptr<f32>, #blocked> loc(#loc46)
      %36 = tt.addptr %6, %28 : tensor<8192x!tt.ptr<f32>, #blocked>, tensor<8192xi32, #blocked> loc(#loc47)
      %37 = tt.load %36, %30, %cst_0 : tensor<8192x!tt.ptr<f32>, #blocked> loc(#loc48)
      %38 = arith.subf %37, %11 : tensor<8192xf32, #blocked> loc(#loc49)
      %39 = arith.mulf %38, %24 : tensor<8192xf32, #blocked> loc(#loc41)
      %40 = arith.mulf %39, %33 : tensor<8192xf32, #blocked> loc(#loc50)
      %41 = arith.addf %40, %35 : tensor<8192xf32, #blocked> loc(#loc51)
      %42 = tt.addptr %25, %29 : tensor<8192x!tt.ptr<f32>, #blocked1>, tensor<8192xi32, #blocked1> loc(#loc42)
      %43 = ttg.convert_layout %41 : tensor<8192xf32, #blocked> -> tensor<8192xf32, #blocked1> loc(#loc52)
      tt.store %42, %43, %31 : tensor<8192x!tt.ptr<f32>, #blocked1> loc(#loc52)
    } loc(#loc43)
    tt.return loc(#loc53)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/home/wenqin/study/triton-code/triton-2.py":31:24)
#loc3 = loc("/home/wenqin/study/triton-code/triton-2.py":32:15)
#loc4 = loc("/home/wenqin/study/triton-code/triton-2.py":32:9)
#loc5 = loc("/home/wenqin/study/triton-code/triton-2.py":33:9)
#loc6 = loc("/home/wenqin/study/triton-code/triton-2.py":38:34)
#loc7 = loc("/home/wenqin/study/triton-code/triton-2.py":39:42)
#loc8 = loc("/home/wenqin/study/triton-code/triton-2.py":39:24)
#loc9 = loc("/home/wenqin/study/triton-code/triton-2.py":37:27)
#loc10 = loc("/home/wenqin/study/triton-code/triton-2.py":38:21)
#loc11 = loc("/home/wenqin/study/triton-code/triton-2.py":39:20)
#loc12 = loc("/home/wenqin/study/triton-code/triton-2.py":40:17)
#loc13 = loc("/home/wenqin/study/triton-code/triton-2.py":40:8)
#loc14 = loc("/home/wenqin/study/triton/python/triton/language/standard.py":290:36)
#loc16 = loc("/home/wenqin/study/triton/python/triton/language/standard.py":260:15)
#loc17 = loc("/home/wenqin/study/triton-code/triton-2.py":41:35)
#loc18 = loc("/home/wenqin/study/triton-code/triton-2.py":47:35)
#loc19 = loc("/home/wenqin/study/triton-code/triton-2.py":44:27)
#loc20 = loc("/home/wenqin/study/triton-code/triton-2.py":45:21)
#loc21 = loc("/home/wenqin/study/triton-code/triton-2.py":46:42)
#loc22 = loc("/home/wenqin/study/triton-code/triton-2.py":46:24)
#loc23 = loc("/home/wenqin/study/triton-code/triton-2.py":46:20)
#loc24 = loc("/home/wenqin/study/triton-code/triton-2.py":47:41)
#loc25 = loc("/home/wenqin/study/triton-code/triton-2.py":48:20)
#loc26 = loc("/home/wenqin/study/triton-code/triton-2.py":48:16)
#loc27 = loc("/home/wenqin/study/triton-code/triton-2.py":48:8)
#loc29 = loc("/home/wenqin/study/triton-code/triton-2.py":49:33)
#loc30 = loc("/home/wenqin/study/triton-code/triton-2.py":50:29)
#loc31 = loc("/home/wenqin/study/triton-code/triton-2.py":50:23)
#loc32 = loc("/home/wenqin/study/triton-code/triton-2.py":50:15)
#loc33 = loc("/home/wenqin/study/triton-code/triton-2.py":51:20)
#loc34 = loc("/home/wenqin/study/triton-code/triton-2.py":51:25)
#loc35 = loc("/home/wenqin/study/triton-code/triton-2.py":53:20)
#loc36 = loc("/home/wenqin/study/triton-code/triton-2.py":53:25)
#loc37 = loc("/home/wenqin/study/triton-code/triton-2.py":57:34)
#loc38 = loc("/home/wenqin/study/triton-code/triton-2.py":58:22)
#loc39 = loc("/home/wenqin/study/triton-code/triton-2.py":59:24)
#loc40 = loc("/home/wenqin/study/triton-code/triton-2.py":60:24)
#loc41 = loc("/home/wenqin/study/triton-code/triton-2.py":62:29)
#loc42 = loc("/home/wenqin/study/triton-code/triton-2.py":65:21)
#loc43 = loc("/home/wenqin/study/triton-code/triton-2.py":56:27)
#loc44 = loc("/home/wenqin/study/triton-code/triton-2.py":57:21)
#loc45 = loc("/home/wenqin/study/triton-code/triton-2.py":59:20)
#loc46 = loc("/home/wenqin/study/triton-code/triton-2.py":60:20)
#loc47 = loc("/home/wenqin/study/triton-code/triton-2.py":61:24)
#loc48 = loc("/home/wenqin/study/triton-code/triton-2.py":61:20)
#loc49 = loc("/home/wenqin/study/triton-code/triton-2.py":62:21)
#loc50 = loc("/home/wenqin/study/triton-code/triton-2.py":63:20)
#loc51 = loc("/home/wenqin/study/triton-code/triton-2.py":63:24)
#loc52 = loc("/home/wenqin/study/triton-code/triton-2.py":65:27)
#loc53 = loc("/home/wenqin/study/triton-code/triton-2.py":56:4)
#loc54 = loc(callsite(#loc14 at #loc15))
#loc56 = loc(callsite(#loc14 at #loc28))
#loc58 = loc(callsite(#loc16 at #loc54))
#loc59 = loc(callsite(#loc16 at #loc56))